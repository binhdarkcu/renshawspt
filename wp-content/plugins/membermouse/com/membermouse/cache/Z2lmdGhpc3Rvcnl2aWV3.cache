/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_GiftHistoryView extends MM_RBACGeneralEmployeeView
{	
	public function __construct()
	{
		parent::__construct();
	}
	
 	public function performAction($post) 
	{	
		$response = parent::performAction($post);
		
		if(!($response instanceof MM_Response))
		{
			switch($post[self::$MM_JSACTION]) 
			{
				default:
					return new MM_Response($response);
			}
		}
		else 
		{
			return $response;
		}
	}
 	
 	public function getViewData($userId,MM_DataGrid $dg=null,$startDate=null)
	{
		global $wpdb;
		
		//tables used in the master query. Placing the constants into variables allows them to be embedded into the string, aiding in readability
		$couponsTable = MM_TABLE_COUPONS;
		$orderItemsTable = MM_TABLE_ORDER_ITEMS;
		$couponUsageTable = MM_TABLE_COUPON_USAGE;
		$productsTable = MM_TABLE_PRODUCTS;
		
		$masterQuery = "SELECT c.date_added as date_gifted, c.gift_order_item_id as order_item_id, p.name, cu.date_added as usage_date, ".
						"cu.user_id as usage_user_id FROM {$couponsTable} c LEFT JOIN {$orderItemsTable} oi ON (c.gift_order_item_id = oi.id) ".
						"LEFT JOIN {$couponUsageTable} cu on (c.id = cu.coupon_id) left join {$productsTable} p on (oi.item_id = p.id) ".
						"WHERE c.gift_user_id = %s";
		
		$masterQuery = $wpdb->prepare($masterQuery,$userId);
		
		$optimizedQuery = "SELECT SQL_CALC_FOUND_ROWS * FROM ({$masterQuery}) data, ".
						  "(SELECT FOUND_ROWS() as 'total') tot";
		
		if(!is_null($dg) && !is_null($dg->sortBy) && !empty($dg->sortBy)) //handle the sorting
		{
			$optimizedQuery.= " ORDER BY {$dg->sortBy} {$dg->sortDir}";
		} 
		
		$optimizedQuery.= " ".$dg->getLimitSql(); //for pagination
		$results = $wpdb->get_results($optimizedQuery);
		return $results;
	}
	
	public function generateRows($data, $renderForAdmin=true)
	{
		$rows = array();
		
		if($renderForAdmin)
		{
			$dateFormat = "M j, Y g:i a";
		}
		else
		{
			$dateFormat = "M j, Y";
		}
		
		foreach($data as $item)
		{
			if(isset($item->order_item_id))
			{
				$orderItem = new MM_OrderItem($item->order_item_id);
				
				if($orderItem->isGift())
				{
					$giftCouponCode = MM_Coupon::getGiftCouponCode($orderItem->getId());
				
					if(!empty($giftCouponCode))
					{
						$giftLink = MM_CorePageEngine::getRedeemGiftPageStaticLink($orderItem->getItemId());
						$giftLink = MM_Utils::appendUrlParam($giftLink, "coupon", $giftCouponCode);
					}
				}
				else 
				{
					continue;
				}
			}
			
			$isRedeemed = false;
			
			if(is_null($item->usage_user_id) || is_null($item->usage_date))
			{
				$status = MM_Utils::getIcon('clock-o', 'blue', '1.2em', '1px');
				$status .= " <em>Not redeemed</em>";
			}
			else
			{
				$user = new MM_User($item->usage_user_id);
				
				if($user->isValid())
				{
					$memberName = "";
					$firstName = $user->getFirstName();
					$lastName = $user->getLastName();
					
					if(!empty($firstName))
					{
						$memberName = $firstName;
						
						if(!empty($lastName))
						{
							$memberName .= " ".substr($user->getLastName(), 0, 1);
						}
					}
					
					if(empty($memberName))
					{
						$memberName = $user->getEmail();
					}
					
					if($renderForAdmin)
					{
						$memberName = "<a href='?page=".MM_MODULE_MANAGE_MEMBERS."&module=details_general&user_id={$user->getId()}'>{$memberName}</a>";
					}
					
					$status = MM_Utils::getCheckIcon();		
					$status .= " Redeemed by {$memberName} on ".MM_Utils::dateToLocal($item->usage_date, "M j, Y");
				}
				else 
				{
					$status = "Redeemed by an invalid member";
				}
				
				$isRedeemed = true;
			}
			
			$actions = "";
			
			if(!$renderForAdmin && !$isRedeemed)
			{
				$actions = "<a href=\"javascript:myaccount_js.showGiftLink('{$giftLink}');\">show gift link</a>";
			}
			
			$crntRow = array
			(
				array( 'content' => MM_Utils::dateToLocal($item->date_gifted, $dateFormat)),
				array( 'content' => $item->name),
				array( 'content' => $status)
			);
			
			if(!$renderForAdmin)
			{
				$crntRow[] = array( 'content' => $actions, "attr" => "nowrap");
			}
			
			$rows[] = $crntRow;
		}
		
		return $rows;
	}
}
