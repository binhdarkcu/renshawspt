class MM_CustomForm extends MM_AbstractForm
{
	public $memberData = null;
	public $success = "";
	public $onSuccessUrl = "";
	
	/**
	 * Default constructor. Takes an associative array of configuration parameters
	 * @param Array $params an associative array of form configuration parameters
	 */
	public function __construct($params=null)
	{	
		if(!is_null($params))
		{
			if(is_array($params) && count($params) > 0)
			{
				foreach($params as $k=>$v)
				{
					$key = strtolower($k);
					$$key = $v;
				}
			}
			
			if(isset($onsuccess))
			{
				$this->onSuccessUrl = $onsuccess;
			}
			
			$this->initialize();
		}
	}
	
	public function initialize()
	{
		global $current_user;
			
		$user = new MM_User($current_user->ID);
		
		// handle form submission...
		if(count($_POST) > 0)
		{	
			if($user->isValid())
			{
				// iterate over post variables and save custom data on current user
				foreach($_POST as $k=>$v)
				{
					if(preg_match("/(mm_custom_field_)/", $k))
					{
						// bypass radio button and checkbox helper fields
						if(strpos($k, 'helper') === false)
						{
							$fieldId = preg_replace("/[^0-9]+/", "", $k);
							$response = $user->setCustomData($fieldId, $v);
			
							if(MM_Response::isError($response))
							{
								if(!empty($v))
								{
									$this->error = "Error saving data: ".$response->message;
								}
							}
						}
					}
				}
				
				// does account update event need to be dispatched?
				$fields = MM_CustomField::getCustomFieldsList();
				foreach($fields as $id=>$val)
				{
					if(MM_CustomFieldData::wasRecentlyUpdated($id, $user->getId()))
					{
						do_action(MM_Event::$MEMBER_ACCOUNT_UPDATE, MM_Event::packageMemberData($user->getId()));
						break;
					}
				}
					
				if(empty($message))
				{
					$this->success = "Data saved successfully";
				}
			}
			else 
			{
				$this->error = "Error saving data: you must be logged in";
			}
		}
		
		// set custom data values
		$this->memberData = array();
			
		if($user->isValid())
		{
			// get custom field data
			$customFields = MM_CustomField::getCustomFieldDataByUser($user->getId());
		
			foreach($customFields as $field)
			{
				$this->memberData["mm_custom_field_".$field->id] = $field->value;
				$this->memberData["mm_custom_field_".$field->id."_label"] = strtolower($field->display_name);
			}
		}
		else
		{
			// get custom field labels
			$customFields = MM_CustomField::getCustomFieldsList();
		
			foreach($customFields as $id=>$displayName)
			{
				$this->memberData["mm_custom_field_".$id."_label"] = strtolower($displayName);
			}
		}
		
		// grab custom data from $_REQUEST object
		if($_REQUEST)
		{
			foreach($_REQUEST as $key=>$value)
			{
				$key = strtolower($key);
		
				// see if custom field data is contained in the $_REQUEST object
				if(strpos($key, "cf_") !== false)
				{
					$arr = explode("_", $key);
		
					if(count($arr) == 2)
					{
						$this->memberData["mm_custom_field_".$arr[1]] = $value;
					}
				}
			}
		}
		
		$this->isValid = true;
	}
	
	/**
	 * This function is responsible for generating all of the HTML that should show up at 
	 * the top of the form based on the the current configuration.
	 * @return String header HTML for the checkout form
	 */
	public function generateFormHeader()
	{		
		$html = $this->getJavascriptIncludes();
		$html .= "<form id=\"mm_custom_form\" name=\"mm_custom_form\" method=\"post\">
";
		$html .= "<input type='hidden' id='hasFormSubmitted' value='' />
";
		return $html;
	}
	
	/**
	 * This function is responsible for generating all of the HTML that should show up at
	 * the bottom of the form based on the the current configuration.
	 * 
	 * @return String footer HTML for the checkout form
	 */
	public function generateFormFooter()
	{
		$html = "</form>
";
		$html .= $this->getInitJavascript();
		return $html;
	}
	
	/**
	 * This function returns the include statements for required javascript files.
	 * @return String that contains the javascript for including required javascript files.
	 */
	public function getJavascriptIncludes()
	{
		$version = MemberMouse::getPluginVersion();
		wp_enqueue_script("membermouse-custom-form", plugins_url(MM_PLUGIN_NAME."/resources/js/user/mm-custom-form.js"), array(), $version, true);
		
		// determine if the user should be redirected to a success URL
		if(!empty($this->success) && !empty($this->onSuccessUrl))
		{
			return "<script>window.location = \"{$this->onSuccessUrl}\";</script>
";
		}
	}
	
	/**
	 * This function returns the javascript to initialize the Custom form. 
	 * @param array $defaultData this contains the default data used to prepopulate certain form elements
	 * @return String that contains the javascript to initializes the checkout form.
	 */
	public function getInitJavascript()
	{
		return "";
	}
	
	/**
	 * This function processes the MM_Form_Section tag. It is responsible for checking if the current user 
	 * should see the contents of this section based on the form configuration.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_section($content, $atts, $code)
	{
		return "Invalid SmartTag Configuration: The '{$code}' SmartTag is not supported for Custom forms.";
	}
	
	/**
	 * This function processes the MM_Form_Field tag. It is responsible for rendering the 
	 * form field based on the type passed and the form configuration.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_field($content, $atts, $code)
	{
		$outputStr = "";
	
		if(is_array($atts) && count($atts) > 0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key = $v;
			}
		}
		
		$form = MM_ObjectCache::get(MM_ObjectCache::$KEY_LAST_FORM);
		
		if(!isset($type))
		{
			$type = "custom";
		}
		
		if(!isset($class) || empty($class))
		{
			$class = "mm-textField";
		}
		
		switch(strtolower($type))
		{
			case "custom":
			case "custom-hidden":
				if(isset($id))
				{
					$customField = MM_CustomField::getDataByFieldId($id);
						
					if($customField->isValid())
					{
						$crntValue = "";
						if(isset($form->memberData["mm_custom_field_{$id}"]) && $form->memberData["mm_custom_field_{$id}"] != "")
						{
							$crntValue = $form->memberData["mm_custom_field_{$id}"];
						}
						
						if($type == "custom-hidden")
						{
							$outputStr .= "<input type='hidden' id='mm_custom_field_{$id}' name='mm_custom_field_{$id}' ";
							$outputStr .= "value='".htmlentities(stripslashes($crntValue), ENT_QUOTES)."' ";								
							$outputStr .= "/>
";
						}
						else
						{
							$outputStr .= $customField->draw($crntValue, $class);
							
							$outputStr .= "<input type='hidden' id='mm_custom_field_{$id}_type' ";
							$outputStr .= "value='".$customField->getType()."' ";
							$outputStr .= "/>
";
						}
						
						$outputStr .= "<input type='hidden' id='mm_custom_field_{$id}_label' ";
					
						if(isset($form->memberData["mm_custom_field_{$id}_label"]))
						{
							$outputStr .= "value='".htmlentities(stripslashes($form->memberData["mm_custom_field_{$id}_label"]), ENT_QUOTES)."' ";
						}
					
						$outputStr .= "/>
";
						if(isset($isrequired) && strtolower($isrequired) == "true")
						{
							$outputStr .= "<input type='hidden' id='mm_custom_field_{$id}_required' value='1' />
";
						}
						else
						{
							$outputStr .= "<input type='hidden' id='mm_custom_field_{$id}_required' value='0' />
";
						}
					}
					else
					{
						$outputStr .= "Invalid custom field ID of '{$id}' passed to SmartTag {$code}";
					}
				}
				else
				{
					return "Invalid SmartTag Configuration: The 'id' attribute is required for SmartTag {$code} with type {$type}.";
				}
					
				break;
				
			default:
				return "Invalid SmartTag Configuration: Invalid type of '{$type}' passed to SmartTag {$code}";
				break;
		}
			
		return $outputStr;
	}
	
	/**
	 * This function processes the MM_Form_Data tag. It is responsible for rendering the 
	 * data element based on the type passed and the form configuration.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_data($content, $atts, $code)
	{
		return "Invalid SmartTag Configuration: The '{$code}' SmartTag is not supported for Custom forms.";
	}
	
	/**
	 * This function processes the MM_Form_Message tag. It is responsible for rendering the 
	 * message element based on the type passed and the form configuration.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_message($content, $atts, $code)
	{
		$outputStr = "";
	
		if(is_array($atts) && count($atts) > 0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key = $v;
			}
		}
		
		$form = MM_ObjectCache::get(MM_ObjectCache::$KEY_LAST_FORM);
	
		if(isset($type))
		{
			switch(strtolower($type))
			{
				case "error":
					if($form->error != "")
					{
						$outputStr .= "<p class=\"mm-error\">".$form->error."</p>";
					}
					break;
					
				case "success":
					if($form->success != "")
					{
						$outputStr .= "<p class=\"mm-success\">".$form->success."</p>";
					}
					break;
				
				default:
					return "Invalid type of '{$type}' passed to {$code}";
					break;
			}
			
			return $outputStr;
		}
		else
		{
			return "Invalid SmartTag Configuration: The 'type' attribute is required for {$code} SmartTag";
		}
	}
	
	/**
	 * This function processes the MM_Form_Button tag. It is responsible for 
	 * returning the appropriate javascript to submit the form based on the type passed.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_button($content, $atts, $code)
	{
		$outputStr = "";
	
		if(is_array($atts) && count($atts) > 0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key = $v;
			}
		}
		
		$form = MM_ObjectCache::get(MM_ObjectCache::$KEY_LAST_FORM);
	
		if(isset($type))
		{
			switch(strtolower($type))
			{
				case "submit":
					if(!isset($label))
					{
						$label = "Submit";
					}
					if(!isset($color))
					{
						$color = "";
					}
					if(!isset($class))
					{
						$customClass = "mm-button {$color}";
					}
					else 
					{
						$customClass = $class;
					}
					$outputStr .= "<input type=\"submit\" name=\"mm_custom_form_submit\" value=\"{$label}\" id=\"mm-submit-button\" class=\"{$customClass}\" onclick=\"return customform_js.checkFields();\" />";
					break;
					
				default:
					return "Invalid type of '{$type}' passed to SmartTag {$code}";
					break;
			}
			
			return $outputStr;
		}
		else
		{
			return "Invalid SmartTag Configuration: The 'type' attribute is required for {$code} SmartTag";
		}
	}
}

