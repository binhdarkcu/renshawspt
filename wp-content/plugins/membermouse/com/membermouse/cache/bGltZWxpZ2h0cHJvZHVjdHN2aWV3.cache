/**
 * 
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_LimeLightProductsView extends MM_RBACProductManagerView
{	
	public static $MM_JSACTION_GET_MEMBERMOUSE_PRODUCT_DESC = "getMMProductDescription";
	public static $MM_JSACTION_GET_LIMELIGHT_PRODUCTS = "getLimeLightProducts";
	public static $MM_JSACTION_GET_LIMELIGHT_PRODUCT_DESC = "getLLProductDescription";
	

	public function __construct()
	{
		parent::__construct();
	}
	
	public function performAction($post) 
	{	
		$response = parent::performAction($post);
		
		if(!($response instanceof MM_Response))
		{
			switch($post[self::$MM_JSACTION]) 
			{
				case self::$MM_JSACTION_SAVE:
					return $this->saveLimeLightProduct($post);
					
				case self::$MM_JSACTION_REMOVE:
					return $this->removeLimeLightProduct($post);
					
				case self::$MM_JSACTION_GET_MEMBERMOUSE_PRODUCT_DESC:
					return $this->getMMProductDescription($post);
					
				case self::$MM_JSACTION_GET_LIMELIGHT_PRODUCTS:
					return $this->getLimeLightProducts($post);
					
				case self::$MM_JSACTION_GET_LIMELIGHT_PRODUCT_DESC:
					return $this->getLimeLightProductDescription($post);
					
				default:
					return new MM_Response($response);
			}
		}
		else 
		{
			return $response;
		}
	}
	
	public function getViewData($post)
	{
		return parent::getData(MM_TABLE_LIMELIGHT_PRODUCTS, null, $post);
	}
	
	private function getLimeLightProductRef($post)
	{
		$limeLightProduct = new MM_LimeLightProduct();
		
		if(isset($post["id"]) && intval($post["id"]) > 0) 
		{
			$limeLightProduct = new MM_LimeLightProduct($post["id"]);
			
			if(!$limeLightProduct->isValid())
			{
				return new MM_Response("Cannot update Lime Light product mapping. Invalid ID '{$post['id']}' passed.", MM_Response::$ERROR);
			}
		}
		return $limeLightProduct;
	} 
	
	private function saveLimeLightProduct($post)
	{ 
		// get Lime Light product 
		$limeLightService = MM_PaymentServiceFactory::getPaymentService(MM_PaymentService::$LIMELIGHT_SERVICE_TOKEN);
		$result = $limeLightService->getProduct($post["limelight_product_id"]);
		
		if(MM_Response::isError($result))
		{
			return new MM_Response("Cannot save Lime Light product mapping. Invalid Lime Light product ID '{$post['limelight_product_id']}' passed.", MM_Response::$ERROR);
		}
		
		$llProductInfo = $result->message;
		
		// get MemberMouse product
		$mmProduct = new MM_Product($post["mm_product_id"]);
		
		if(!$mmProduct->isValid())
		{
			return new MM_Response("Cannot save Lime Light product mapping. Invalid MemberMouse product ID '{$post['mm_product_id']}' passed.", MM_Response::$ERROR);
		}
		
		// validate mapping
	 	$priceMismatch = "";
	 	$subscriptionMismatch = "";
		$shippingMismatch = "";
		
		$mmAmount = ($mmProduct->hasTrial()) ? $mmProduct->getTrialAmount(false) : $mmProduct->getPrice(false);
		
		if(floatval($llProductInfo["product_price"]) != $mmAmount)
		{
			$priceMismatch = "PRICE MISMATCH\n";
			$priceMismatch .= "Lime Light Price: "._mmf($llProductInfo["product_price"], "USD")."\n";
			$priceMismatch .= "MemberMouse Price: ".$mmAmount."\n\n";
		}
		
		$llIsSubscription = ($llProductInfo["product_rebill_product"] == "0") ? false : true;
		if($llIsSubscription != $mmProduct->isRecurring())
		{
			$subscriptionMismatch = "SUBSCRIPTION MISMATCH\n";
			$subscriptionMismatch .= "Lime Light Product is Subscrtipion: ";
			$subscriptionMismatch .= ($llIsSubscription) ? "Yes" : "No";
			$subscriptionMismatch .= "\n";
			$subscriptionMismatch .= "MemberMouse Product is Subscription: ";
			$subscriptionMismatch .= ($mmProduct->isRecurring()) ? "Yes" : "No";
			$subscriptionMismatch .= "\n\n";
		}
		
		$llRequiresShipping = ($llProductInfo["product_is_shippable"] == "0") ? false : true;
		if($llRequiresShipping != $mmProduct->isShippable())
		{
			$shippingMismatch = "SHIPPING REQUIREMENT MISMATCH\n";
			$shippingMismatch .= "Lime Light Product is Shippable: ";
			$shippingMismatch .= ($llRequiresShipping) ? "Yes" : "No";
			$shippingMismatch .= "\n";
			$shippingMismatch .= "MemberMouse Product is Shippable: ";
			$shippingMismatch .= ($mmProduct->isShippable()) ? "Yes" : "No";
			$shippingMismatch .= "\n\n";
		}
		
		if(!empty($priceMismatch) || !empty($subscriptionMismatch) || !empty($shippingMismatch))
		{
			$errorMsg = "Invalid product mapping:\nLime Light product settings must match the MemberMouse product settings.\n\n";
			
			$errorMsg .= $priceMismatch;
			$errorMsg .= $subscriptionMismatch;
			$errorMsg .= $shippingMismatch;
			
			return new MM_Response($errorMsg, MM_Response::$ERROR);
		} 

		$mapAll = ($post["limelight_campaign_map_all"] == "1");
	 	if(!$mapAll && is_array($post["limelight_campaign_id"]))
	 	{ 
	 		$llCampaignNames = explode("|",$post["limelight_campaign_name"]);
	 		if(count($llCampaignNames)==count($post["limelight_campaign_id"]))
	 		{ 
		 		for($i=0; $i<count($post["limelight_campaign_id"]); $i++)
		 		{ 
		 			$limeLightProduct = $this->getLimeLightProductRef($post);
		 			if($limeLightProduct instanceof MM_Response)
		 			{
		 				return $limeLightProduct;
		 			}

		 			if(MM_LimeLightProduct::hasExistingProductMappings($post["limelight_product_id"],$post["mm_product_id"]))
		 			{
		 				return new MM_Response("There already exists mappings to this Lime Light product.", MM_Response::$ERROR);
		 			}
		 			
		 			$limeLightProduct->setMMProductId($post["mm_product_id"]);
		 			$limeLightProduct->setLimeLightProductId($post["limelight_product_id"]);
		 			$limeLightProduct->setLimeLightProductName($post["limelight_product_name"]);
				 	$limeLightProduct->setLimeLightCampaignId($post["limelight_campaign_id"][$i]);
				 	$limeLightProduct->setLimeLightCampaignName($llCampaignNames[$i]);
					$response = $limeLightProduct->commitData();
					if($response->type == MM_Response::$ERROR)
					{
						return $response;
					}
		 		} 
	 		}
	 		else 
	 		{
	 			return new MM_Response("Invalid number of campaign selections.", MM_Response::$ERROR);
	 		}
	 		return true;
	 	}
	 	else
	 	{
		 	$limeLightProduct = $this->getLimeLightProductRef($post);
 			if($limeLightProduct instanceof MM_Response)
 			{
 				return $limeLightProduct;
 			}

 			if(intval($post["id"])>0)
 			{
 				if(MM_LimeLightProduct::hasExistingProductMappings($post["limelight_product_id"],$post["mm_product_id"],intval($post["id"])))
 				{
 					return new MM_Response("There already exists mappings to this Lime Light product.", MM_Response::$ERROR);
 				}
 			}
 			else
 			{
 				if(MM_LimeLightProduct::hasExistingProductMappings($post["limelight_product_id"],$post["mm_product_id"]))
 				{
 					return new MM_Response("There already exists mappings to this Lime Light product.", MM_Response::$ERROR);
 				}
 			}
 			
 			
 			$limeLightProduct->setMMProductId($post["mm_product_id"]);
 			$limeLightProduct->setLimeLightProductId($post["limelight_product_id"]);
 			$limeLightProduct->setLimeLightProductName($post["limelight_product_name"]);
 			if($mapAll)
 			{
 				if(intval($post["id"])>0)
 					MM_LimeLightProduct::removeExistingProductMappings($post["limelight_product_id"], $post["id"]);
 				
			 	$limeLightProduct->setLimeLightCampaignId(0);
			 	$limeLightProduct->setLimeLightCampaignName("ALL");
 			}
 			else 
 			{
			 	$limeLightProduct->setLimeLightCampaignId($post["limelight_campaign_id"]);
			 	$limeLightProduct->setLimeLightCampaignName($post["limelight_campaign_name"]);
 			}
			return $limeLightProduct->commitData();
	 	}
	}
	
	private function removeLimeLightProduct($post)
	{
		global $wpdb;
		
		if(isset($post["id"]) && intval($post["id"]) > 0)
		{
			$limeLightProduct = new MM_LimeLightProduct($post["id"], false);
			$result = $limeLightProduct->delete();
			
			if($result) 
			{
				return new MM_Response();
			} 
			else 
			{
				return new MM_Response("Error removing Lime Light product mapping", MM_Response::$ERROR);
			}
		}
		
		return new MM_Response("Unable to delete Lime Light product mapping. No ID specified.", MM_Response::$ERROR);
	}
	
	private function getLimeLightProducts($post)
	{
		if(isset($post["campaign_id"]))
		{
			$limeLightService = MM_PaymentServiceFactory::getPaymentService(MM_PaymentService::$LIMELIGHT_SERVICE_TOKEN);
			return MM_HtmlUtils::generateSelectionsList($limeLightService->getProductsByCampaign($post["campaign_id"]));
		}
		else
		{
			return new MM_Response("Error retrieving products. No Campaign ID specified.", MM_Response::$ERROR);
		}
	}
	
	private function getLimeLightProductDescription($post)
	{
		if(isset($post["product_id"]))
		{
			$limeLightService = MM_PaymentServiceFactory::getPaymentService(MM_PaymentService::$LIMELIGHT_SERVICE_TOKEN);
			return $limeLightService->getProductDescription($post["product_id"]);
		}
		else
		{
			return new MM_Response("Error retrieving product information. No product ID specified.", MM_Response::$ERROR);
		}
	}
	
	private function getMMProductDescription($post)
	{
		if(isset($post["mm_product_id"]))
		{
			$product = new MM_Product($post["mm_product_id"]);
			
			if($product->isValid())
			{
				$mmProductDescription = $product->getBillingDescription()." ";
				 
				if($product->hasTrial())
				{
					$mmProductDescription .= MM_Utils::getIcon('clock-o', 'beige', '1.3em', '2px', 'Has Trial', 'margin-right:5px;');
				}
				 
				if($product->isRecurring())
				{
					if($product->doLimitPayments())
					{
						$mmProductDescription .= MM_Utils::getIcon('calendar-o', 'beige', '1.3em', '2px', 'Payment Plan', 'margin-right:5px;');
					}
					else
					{
						$mmProductDescription .= MM_Utils::getIcon('refresh', 'beige', '1.3em', '2px', 'Subscription', 'margin-right:5px;');
					}
				}
				 
				if($product->isShippable())
				{
					$mmProductDescription .= MM_Utils::getIcon('truck', 'beige', '1.3em', '2px', 'Requires Shipping', 'margin-right:5px;');
				}
				 
				if($product->getSku() != "")
				{
					$mmProductDescription .= MM_Utils::getIcon('barcode', 'beige', '1.3em', '2px', "SKU [".$product->getSku()."]", 'margin-right:5px;');
				}
				
				return new MM_Response($mmProductDescription);
			}
			else 
			{
				return new MM_Response("Error retrieving MemberMouse product description. Invalid product ID '{$post["mm_product_id"]}'.", MM_Response::$ERROR);
			}
		}
		else
		{
			return new MM_Response("Error retrieving MemberMouse product description. No product ID specified.", MM_Response::$ERROR);
		}
	}
}
