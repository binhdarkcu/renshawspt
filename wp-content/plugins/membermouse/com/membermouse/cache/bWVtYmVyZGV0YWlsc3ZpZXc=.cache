/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_MemberDetailsView extends MM_RBACGeneralEmployeeView
{	
	public static $MM_JSACTION_UPDATE_MEMBER = "updateMember";
	public static $MM_JSACTION_DELETE_MEMBER = "deleteMember";
	public static $MM_JSACTION_SEND_PASSWORD = "sendPasswordEmail";
	public static $MM_JSACTION_SEND_WELCOME_EMAIL = "sendWelcomeEmail";
	public static $MM_JSACTION_LOGIN_AS_MEMBER = "loginAsMember";
	public static $MM_JSACTION_CHANGE_MEMBERSHIP_STATUS = "changeMembershipStatus";
	public static $MM_JSACTION_CHANGE_MEMBERSHIP = "changeMembership";
	public static $MM_JSACTION_CHANGE_BUNDLE_STATUS = "changeBundleStatus";
	public static $MM_JSACTION_UPDATE_SUBSCRIPTION_BILLING = "updateSubscriptionBilling";
	public static $MM_JSACTION_SAVE_BUNDLE_CONFIG = "saveBundleConfiguration";
	public static $MM_JSACTION_FORGET_MEMBER = "forgetMember";


	public function __construct()
	{
		parent::__construct();
	}
	
 	public function performAction($post) 
	{	
		$response = parent::performAction($post);
		
		if(!($response instanceof MM_Response))
		{
			switch($post[self::$MM_JSACTION]) 
			{
				case self::$MM_JSACTION_UPDATE_MEMBER:
					return $this->updateMember($post);
					
				case self::$MM_JSACTION_DELETE_MEMBER:
					return $this->deleteMember($post);
				
				case self::$MM_JSACTION_SEND_PASSWORD:
					return $this->sendPasswordReminder($post);
				
				case self::$MM_JSACTION_SEND_WELCOME_EMAIL:
					return $this->sendWelcomeEmail($post);
				
				case self::$MM_JSACTION_LOGIN_AS_MEMBER:
					return $this->loginAsMember($post);
					
				case self::$MM_JSACTION_FORGET_MEMBER:
				    return $this->forgetMember($post);
				
				case self::$MM_JSACTION_CHANGE_MEMBERSHIP_STATUS:
					return $this->changeMembershipStatus($post);
					
				case self::$MM_JSACTION_CHANGE_MEMBERSHIP:
					return $this->changeMembership($post);
				
				case self::$MM_JSACTION_CHANGE_BUNDLE_STATUS:
					return $this->changeBundleStatus($post);
				
				case self::$MM_JSACTION_UPDATE_SUBSCRIPTION_BILLING:
					return $this->updateSubscriptionBillingInfo($post);
					
				case self::$MM_JSACTION_SAVE_BUNDLE_CONFIG:
					return $this->saveBundleConfiguration($post);
					
				default:
					return new MM_Response($response);
			}
		}
		else 
		{
			return $response;
		}
	}
	
	private function updateMember($post)
	{	
		if(isset($post["mm_id"])) 
		{
			$user = new MM_User($post["mm_id"]);
			
			if($user->isValid()) 
			{
				$enableUsernameChange = (MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_ENABLE_USERNAME_CHANGE) == "1") ? true : false;
				
				$user->setFirstName($post["mm_first_name"]);
				$user->setLastName($post["mm_last_name"]);
				$user->setEmail($post["mm_email"]);
				
				if($enableUsernameChange)
				{
					$user->setUsername($post["mm_username"]);
				}
				
				$user->setPhone($post["mm_phone"]);
				$user->setNotes($post["mm_notes"]);
				
				// billing info
				$user->setBillingAddress($post["mm_billing_address"]);
				$user->setBillingCity($post["mm_billing_city"]);
				$user->setBillingState($post["mm_field_billing_state"]);
				$user->setBillingZipCode($post["mm_billing_zip_code"]);
				$user->setBillingCountry($post["mm_field_billing_country"]);
				
				// shipping info
				$user->setShippingAddress($post["mm_shipping_address"]);
				$user->setShippingCity($post["mm_shipping_city"]);
				$user->setShippingState($post["mm_field_shipping_state"]);
				$user->setShippingZipCode($post["mm_shipping_zip_code"]);
				$user->setShippingCountry($post["mm_field_shipping_country"]);
				
				if(isset($post["mm_new_password"]) && $post["mm_new_password"] != "") 
				{
					$user->setPassword($post["mm_new_password"]);
				}
				
				$result = $user->commitData();
				
				if($result->type == MM_Response::$SUCCESS) 
				{
					return new MM_Response("Member '".$user->getEmail()."' updated successfully");
				}
				else 
				{
					return $result;
				}
			}
			else 
			{
				return new MM_Response("Error updating member with ID '".$post["mm_id"]."'", MM_Response::$ERROR);
			}
		}
		else 
		{
			return new MM_Response("Error updating member. ID is required.", MM_Response::$ERROR);
		}
	}
	
	private function sendPasswordReminder($post)
	{
		if(!isset($post["user_id"]))
		{
			return new MM_Response("Member ID is required.", MM_Response::$ERROR);
		}
		
		$user = new MM_User($post["user_id"]);
		
		if(!$user->isValid())
		{
			return new MM_Response("Invalid member ID '{$post["user_id"]}'.", MM_Response::$ERROR);
		}
		
		//set a new password for the user
		MM_User::generateAndStoreForgotPasswordHash($user);
		
		$member = get_user_by_email($user->getUsername());
		
		$email = new MM_Email();
		$employee = MM_Employee::getDefault();
		$context = new MM_Context($user, $employee);
		
		$email->setContext($context);
		$email->setSubject(MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_FORGOT_PASSWORD_SUBJECT));
		$email->setBody(MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_FORGOT_PASSWORD_BODY));
		
		$firstName = $user->getFirstName();
		$name = (!empty($firstName)) ? $firstName : $user->getUsername();
		$email->setToName($name);
		$email->setToAddress($user->getEmail());
		$email->setFromName($employee->getDisplayName());
		$email->setFromAddress($employee->getEmail());
		$response = $email->send();
		
		return $response;
	}
	
	private function sendWelcomeEmail($post)
	{
		if(!isset($post["user_id"]))
		{
			return new MM_Response("Member ID is required.", MM_Response::$ERROR);
		}
	
		$user = new MM_User($post["user_id"]);
	
		if(!$user->isValid())
		{
			return new MM_Response("Invalid member ID '{$post["user_id"]}'.", MM_Response::$ERROR);
		}
	
		$user->sendWelcomeEmail();
	
		return new MM_Response();
	}
	
	private function loginAsMember($post)
	{
		if(!isset($post["user_id"]))
		{
			return new MM_Response("Member ID is required.", MM_Response::$ERROR);
		}
	
		$user = new MM_User($post["user_id"]);
	
		if(!$user->isValid())
		{
			return new MM_Response("Invalid member ID '{$post["user_id"]}'.", MM_Response::$ERROR);
		}
		
		// check if an administrator is logged in
		global $current_user;
		$employee = MM_Employee::findByUserId($current_user->ID);
		if(is_user_logged_in() && $employee->canLoginAsMember())
		{
			wp_set_current_user($user->getId(), $user->getUsername());
			wp_set_auth_cookie($user->getId());
			do_action('wp_login', $user->getUsername()); 
 
			// Start of determination of home page url 
			$redirect_to = null;
			if($user->getStatus() == MM_Status::$EXPIRED)
			{ 
				$redirect_to = MM_CorePageEngine::getUrl(MM_CorePageType::$ERROR, MM_Error::$ACCOUNT_EXPIRED, $user);
			}
			else if($user->getStatus() == MM_Status::$CANCELED)
			{ 
				$redirect_to = MM_CorePageEngine::getUrl(MM_CorePageType::$ERROR, MM_Error::$ACCOUNT_CANCELED, $user);
			}
			else if($user->getStatus() == MM_Status::$LOCKED)
			{ 
				$redirect_to = MM_CorePageEngine::getUrl(MM_CorePageType::$ERROR, MM_Error::$ACCOUNT_LOCKED, $user);
			}
			else if($user->getStatus() == MM_Status::$OVERDUE)
			{
				$redirect_to = MM_CorePageEngine::getUrl(MM_CorePageType::$MY_ACCOUNT, "", $user);
			} 
			else
			{ 
				$setting = MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_ON_LOGIN_USE_WP_FRONTPAGE);
				if($setting == "1")
				{
					$redirect_to = MM_OptionUtils::getOption("siteurl");
				}
				else
				{
					$redirect_to = MM_CorePageEngine::getUrl(MM_CorePageType::$MEMBER_HOME_PAGE, "", $user);
				}  
			}  
			
			if(is_null($redirect_to) || empty($redirect_to))
			{
				$redirect_to = admin_url('/home'); 
			} 
			// end of home page url determination
			
			return new MM_Response($redirect_to);
		}
		else 
		{
			return new MM_Response("You don't have the appropriate permissions to login as this member", MM_Response::$ERROR);
		}
	}
	
	public function changeMembershipStatus($post)
	{
		if(isset($post["mm_id"]) && isset($post["mm_new_status"]))
		{
			$user = new MM_User($post["mm_id"]);
			
			return MM_AccessControlEngine::changeMembershipStatus($user, $post["mm_new_status"]);
		}
		else
		{
			return new MM_Response("Error changing membership status. Member ID and new status are required.", MM_Response::$ERROR);
		}
	}
	
	public function changeMembership($post)
	{
		if(isset($post["mm_id"]) && isset($post["mm_new_membership"]))
		{
			$user = new MM_User($post["mm_id"]);
			$ignorePaymentServiceErrors = (isset($post["mm_ignore_payment_service_errors"]) && ($post["mm_ignore_payment_service_errors"] == "true"))?true:false;
			return MM_AccessControlEngine::changeMembership($user, $post["mm_new_membership"],$ignorePaymentServiceErrors);
		}
		else
		{
			return new MM_Response("Error changing membership. Member ID and new membership are required.", MM_Response::$ERROR);
		}
	}
	
	public function changeBundleStatus($post)
	{
		if(isset($post["mm_id"]) && isset($post["mm_bundle_id"]) && isset($post["mm_new_status"]))
		{
			$user = new MM_User($post["mm_id"]);
			$bundle = new MM_Bundle($post["mm_bundle_id"]);
			$newStatus = intval($post["mm_new_status"]);
			
			return MM_AccessControlEngine::changeBundleStatus($user, $bundle, $newStatus);
		}
		else
		{
			return new MM_Response("Error changing bundle status. Member ID, bundle ID and new bundle status are required.", MM_Response::$ERROR);
		}
	}
	
	public function cancelSubscriptionForOrderItem($orderItem)
	{
		if($orderItem->isValid())
		{
			$result = MM_PaymentUtils::cancelSubscriptionForOrderItem($orderItem);
				
			if(MM_Response::isError($result))
			{
				return $result;
			}
				
			$result = MM_AccessControlEngine::revokeAccessForOrderItem($orderItem);
			
			if(MM_Response::isError($result))
			{
				return $result;
			}
			
			return new MM_Response("Subscription canceled successfully.");
		}
		else
		{
			return new MM_Response("Error cancelling subscription. Order Item {$post["mm_order_item_id"]} is invalid.", MM_Response::$ERROR);
		}
	}
	
	public function updateSubscriptionBillingInfo($post)
	{
		if(isset($post["mm_order_item_id"]))
		{
			$orderItem = new MM_OrderItem($post["mm_order_item_id"]);
			
			$billingAddress = new MM_CustomerAddress();

			$order = MM_Order::create($orderItem->getOrderId());
			$paymentService = $order->getPaymentMethod();
			
			if (($paymentService instanceof MM_PaymentService) && ($paymentService->supportsFeature(MM_PaymentServiceFeatures::TOKEN_EXCHANGE)) && !empty($post['mm_field_payment_token']))
			{
				$cardInfo = new MM_PaymentToken($post["mm_field_payment_token"]);
			}
			else 
			{
				$cardInfo = new MM_CardInfo();
				$cardInfo->setCardNumber($post["mm_field_cc_number"]);
				$cardInfo->setExpirationMonth($post["mm_field_cc_exp_month"]);
				$cardInfo->setExpirationYear($post["mm_field_cc_exp_year"]);
				$cardInfo->setCVV($post["mm_field_cc_cvv"]);
			}
			
			$billingAddress->setAddressLine1($post["mm_field_billing_address"]);
			$billingAddress->setCity($post["mm_field_billing_city"]);
			$billingAddress->setState($post["mm_field_billing_state"]);
			$billingAddress->setPostalCode($post["mm_field_billing_zip"]);
			$billingAddress->setCountry($post["mm_field_billing_country"]);
			
			$result = MM_PaymentUtils::updateSubscriptionBillingInfo($orderItem, $cardInfo, $billingAddress);
			
			if(MM_Response::isSuccess($result)) 
			{
				// change status of membership or bundle to active
				$orderItemAccess = MM_OrderItemAccess::getAccessByOrderItem($orderItem->getId());
		
				if($orderItemAccess->isValid())
				{
					$user = new MM_User(MM_Order::getUserIdByOrderId($orderItem->getOrderId()));
						
					if($user->isValid())
					{
						if($orderItemAccess->getAccessType() == MM_OrderItemAccess::$ACCESS_TYPE_MEMBERSHIP)
						{
							$result = MM_AccessControlEngine::changeMembershipStatus($user, MM_Status::$ACTIVE);
						}
						else if($orderItemAccess->getAccessType() == MM_OrderItemAccess::$ACCESS_TYPE_BUNDLE)
						{
							$bundle = new MM_Bundle($orderItemAccess->getAccessTypeId());
								
							if($bundle->isValid())
							{
								$result = MM_AccessControlEngine::changeBundleStatus($user, $bundle, MM_Status::$ACTIVE);
							}
						}
					}
				}
				
				$result->type = MM_Response::$SUCCESS;
				$result->message = "Billing details updated successfully";
			}
			
			return $result;
		}
		else
		{
			return new MM_Response("Error updating subscription billing details. Order item ID are required.", MM_Response::$ERROR);
		}
	}
	
	public function editBundleConfiguration($post)
	{
		if(isset($post["member_id"]) && isset($post["bundle_id"]))
		{
			$info = new stdClass();
			$info->memberId = $post["member_id"];
			$info->bundleId = $post["bundle_id"];
			
			$data = MM_TEMPLATE::generate(MM_MODULES."/".MM_MODULE_MEMBER_DETAILS_ACCESS_RIGHTS.".dialog.php", $info);
			
			return new MM_Response($data);
		}
		else
		{
			return new MM_Response("Error editing calculation method. Member ID and bundle ID are required.", MM_Response::$ERROR);
		}
	}
	
	public function saveBundleConfiguration($post)
	{
		if(isset($post["member_id"]) && isset($post["bundle_id"]))
		{
			$appliedBundle = MM_AppliedBundle::getAppliedBundle($post["member_id"], $post["bundle_id"]);
			
			if($appliedBundle->isValid())
			{
				if(isset($post["mm_calc_method"]))
				{
					$appliedBundle->setDaysCalcMethod($post["mm_calc_method"]);
					
					switch($post["mm_calc_method"])
					{
						case MM_DaysCalculationTypes::$CUSTOM_DATE:
							$calcMethodCustomDate = MM_Utils::dateToUTC($post['mm_custom_date'], "Y-m-d H:i", "00:00:00");
							$appliedBundle->setDaysCalcValue($calcMethodCustomDate);
							break;
							
						case MM_DaysCalculationTypes::$FIXED:
							$appliedBundle->setDaysCalcValue($post["mm_fixed"]);
							break;
					}
				}
				
				if($appliedBundle->doesExpire() && isset($post["mm_expiration_date"]))
				{
					$expirationDate = MM_Utils::dateToUTC($post['mm_expiration_date'], "Y-m-d H:i", "00:00:00");
					$appliedBundle->setExpirationDate($expirationDate);
				}
				
				if($appliedBundle->isPendingCancellation() && isset($post["mm_cancellation_date"]))
				{
					$cancellationDate = MM_Utils::dateToUTC($post['mm_cancellation_date'], "Y-m-d H:i", "00:00:00");
					$appliedBundle->setCancellationDate($cancellationDate);
				}
				
				$appliedBundle->commitData();
				
				return new MM_Response("Bundle configuration saved successfully");
			}
		}
		else
		{
			return new MM_Response("Unable to update bundle configuration. User ID and bundle ID are required.", MM_Response::$ERROR);	
		}
	}
	
	private function deleteMember($post) 
	{
		$user = new MM_User($post["id"]);
		
		if($user->isValid()) 
		{
			$result = $user->delete();
			
			return $result;
		}
		
		return new MM_Response("Unable to delete member. No ID specified.", MM_Response::$ERROR);
	}
	
	/**
	 * This method is called when an rebill payment delclined event is dispatched. This method is registerd 
	 * as a listener for that event in the MM plugin index.php
	 */
	public function handleRebillPaymentDeclinedEvent($params)
	{
		$result = new MM_Response();
		
		if(isset($params["order_item_id"]))
		{
			$orderItem = new MM_OrderItem($params["order_item_id"]);
			
			if($orderItem->isValid())
			{
				$orderItemAccess = MM_OrderItemAccess::getAccessByOrderItem($orderItem->getId());
				
				if($orderItemAccess->isValid())
				{
					$user = new MM_User(MM_Order::getUserIdByOrderId($orderItem->getOrderId()));
					
					if($user->isValid())
					{
						if($orderItemAccess->getAccessType() == MM_OrderItemAccess::$ACCESS_TYPE_MEMBERSHIP)
						{
							if($user->getStatus() == MM_Status::$ACTIVE)
							{
								$result = MM_AccessControlEngine::changeMembershipStatus($user, MM_Status::$OVERDUE);
							}
							else 
							{
								$result = new MM_Response();
							}
						}
						else if($orderItemAccess->getAccessType() == MM_OrderItemAccess::$ACCESS_TYPE_BUNDLE)
						{
							$bundle = new MM_Bundle($orderItemAccess->getAccessTypeId());
							
							if($bundle->isValid())
							{
								if($bundle->getStatus() == MM_Status::$ACTIVE)
								{
									$result = MM_AccessControlEngine::changeBundleStatus($user, $bundle, MM_Status::$OVERDUE);
								}
								else 
								{
									$result = new MM_Response();
								}
							}
							else
							{
								$result = new MM_Response("Error handling rebill payment declined event. Invalid bundle ID '{$orderItemAccess->getAccessTypeId()}'.", MM_Response::$ERROR);
							}
						}
					}
					else 
					{
						$result = new MM_Response("Error handling rebill payment declined event. Unable to locate valid member associatd with order item ID '{$params["order_item_id"]}'.", MM_Response::$ERROR);
					}
				}
				else 
				{
					$result = new MM_Response("Error handling rebill payment declined event. Unable to locate access associated with order item ID '{$params["order_item_id"]}'.", MM_Response::$ERROR);
				}
			}
			else
			{
				$result = new MM_Response("Error handling rebill payment declined event. Order item ID '{$params["order_item_id"]}' is invalid.", MM_Response::$ERROR);
			}
		}
		else 
		{
			$result = new MM_Response("Error handling rebill payment declined event. Order item ID is required", MM_Response::$ERROR);
		}
		
		return $result;
	}
	
	
	/**
	 * This method is called when a rebill payment event is dispatched. It ensures that a customers access is set to 
	 * active when this event is receieved.
	 */
	public function handleRebillPaymentReceivedEvent($params)
	{
		$result = new MM_Response();
	
		if(isset($params["order_item_id"]))
		{
			$orderItem = new MM_OrderItem($params["order_item_id"]);
				
			if($orderItem->isValid())
			{
				$orderItemAccess = MM_OrderItemAccess::getAccessByOrderItem($orderItem->getId());
	
				if($orderItemAccess->isValid())
				{
					$user = new MM_User(MM_Order::getUserIdByOrderId($orderItem->getOrderId()));
						
					if($user->isValid())
					{
						if($orderItemAccess->getAccessType() == MM_OrderItemAccess::$ACCESS_TYPE_MEMBERSHIP)
						{
							if($user->getStatus() != MM_Status::$ACTIVE && $user->getStatus() != MM_Status::$LOCKED)
							{
								$result = MM_AccessControlEngine::changeMembershipStatus($user, MM_Status::$ACTIVE);
							}
						}
						else if($orderItemAccess->getAccessType() == MM_OrderItemAccess::$ACCESS_TYPE_BUNDLE)
						{
							$bundle = new MM_Bundle($orderItemAccess->getAccessTypeId());
								
							if($bundle->isValid())
							{
								if($bundle->getStatus() != MM_Status::$ACTIVE)
								{
									$result = MM_AccessControlEngine::changeBundleStatus($user, $bundle, MM_Status::$ACTIVE);
								}
							}
							else
							{
								$result = new MM_Response("Error handling rebill payment received event. Invalid bundle ID '{$orderItemAccess->getAccessTypeId()}'.", MM_Response::$ERROR);
							}
						}
					}
					else
					{
						$result = new MM_Response("Error handling rebill payment received event. Unable to locate valid member associatd with order item ID '{$params["order_item_id"]}'.", MM_Response::$ERROR);
					}
				}
				else
				{
					$result = new MM_Response("Error handling rebill payment received event. Unable to locate access associated with order item ID '{$params["order_item_id"]}'.", MM_Response::$ERROR);
				}
			}
			else
			{
				$result = new MM_Response("Error handling rebill payment received event. Order item ID '{$params["order_item_id"]}' is invalid.", MM_Response::$ERROR);
			}
		}
		else
		{
			$result = new MM_Response("Error handling rebill payment received event. Order item ID is required", MM_Response::$ERROR);
		}
	
		return $result;
	}
	
	
	/**
	 * Override base showDialog method to allow certain dialogs to be displayed
	 * {@inheritDoc}
	 * @see MM_View::showDialog()
	 */
	protected function showDialog($post)
	{
		$info = $this->createValueObjectFromRequest($post);
		$allowedModules = array(MM_MODULE_MEMBER_DETAILS_ACCESS_RIGHTS);
		$requestedModule = (isset($post[self::$MM_JSMODULE]))?$post[self::$MM_JSMODULE]:"";
		if (!empty($requestedModule) && in_array($requestedModule,$allowedModules))
		{
			return MM_TEMPLATE::generate(MM_MODULES."/{$requestedModule}.dialog.php", $info);
		}
		else
		{
			return parent::showDialog($post);
		}
	}
	
	
	protected function forgetMember($post)
	{
	    if(!isset($post["user_id"]))
	    {
	        return new MM_Response(_mmt("Member ID is required"), MM_Response::$ERROR);
	    }
	    
	    $user = new MM_User($post["user_id"]);
	    
	    if(!$user->isValid())
	    {
	        return new MM_Response(sprintf(_mmt("Invalid Member ID %s"),$post["user_id"]), MM_Response::$ERROR);
	    }
	    
	    //TODO: check if there are other security concerns based on employee permissions
	    return $user->forget();
	}
 }
