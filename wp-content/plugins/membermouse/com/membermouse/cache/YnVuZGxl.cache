/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_Bundle extends MM_Entity
{	
	public static $SUB_TYPE_PAID = "paid";
	public static $SUB_TYPE_FREE = "free";
	
	private $name = "";
	private $dfltMembershipId = "";
	private $isFreeFlag = "1";
	private $description = "";
	private $status = "1";
	private $lastProductIds = array();
	private $productIds = array();
	private $categoryIds = array();
	private $shortName = "";
	private $expires = "0";
	private $expireAmount = "";
	private $expirePeriod = "";
	
	
	public function getData() 
	{
		global $wpdb;
		
		$sql = "SELECT * FROM ".MM_TABLE_BUNDLES." WHERE id='".$this->id."';";
		$result = $wpdb->get_row($sql);
		
		if($result) 
		{
			$this->setData($result);
		}
		else {
			parent::invalidate();
		}
	}
	
	/**
	 * Determine if a particular bundle is associated with a particular category
	 * 
	 * @param unknown $bundleId ID of the bundle
	 * @param unknown $categoryIds array of category IDs
	 * @return boolean return true if the bundle is associated with one or more of the category IDs passed
	 */
	public static function hasAccessToCategory($bundleId, $categoryIds)
	{
		global $wpdb;
		$sql = "SELECT count(*) as total FROM ".MM_TABLE_BUNDLE_CATEGORIES." WHERE bundle_id='{$bundleId}' ";
		$sql .= " AND category_id IN (".implode(",", $categoryIds).");";
		$result = $wpdb->get_var($sql);
		
		if($result !== false && intval($result) > 0)
		{
			return true;
		}
		
		return false;
	}
	
	public function setData($data)
	{
		try 
		{
			$this->name = $data->name;
			$this->isFreeFlag = $data->is_free;
			$this->description = $data->description;
			$this->status = $data->status;
			$this->dfltMembershipId = $data->dflt_membership_id;
			$this->shortName = $data->short_name;
			$this->expireAmount = $data->expire_amount;
			$this->expirePeriod = $data->expire_period;
			$this->expires = $data->expires;
			$this->getAssociatedProducts();
			$this->getAssociatedCategories();
			parent::validate();
		}
		catch (Exception $ex) 
		{
			parent::invalidate();
		}
	}
	
	public function commitData()
	{	
		global $wpdb;
		
		if(!MM_MemberMouseService::hasPermission(MM_MemberMouseService::$FEATURE_BUNDLES))
		{
			return new MM_Response("ERROR: Bundles are not active for this MemberMouse license", MM_Response::$ERROR);
		}
		
		if ($this->shortName == '')
		{
			$this->shortName = $this->autogenShortName();
		}
		
		if (!MM_Bundle::checkShortNameIsUnique($this->shortName,$this->id))
		{
			return new MM_Response("Error: Short Name must be unique across bundles", MM_Response::$ERROR);
		}
		
		$doUpdate = isset($this->id) && $this->id != "" && intval($this->id) > 0;
		 
		MM_Transaction::begin();
		try
		{	
			if(!$doUpdate) 
			{
				$sql = "insert into ".MM_TABLE_BUNDLES." set " .
			 			"	name='%s'," .
			 			"	status='%d'," .
			 			"	dflt_membership_id='%d'," .
			 			"	is_free='%d'," .
			 			"	description='%s'," .
						"	short_name='%s'," .
			 			"	expire_amount='%d'," .
			 			"	expire_period='%s'," .
			 			"	expires='%d'" .
			 			"";
			}
			else 
			{	
				$sql = "update ".MM_TABLE_BUNDLES." set " .
			 			"	name = '%s'," .
			 			"	status='%d'," .
			 			"	dflt_membership_id='%d'," .
		 				"	is_free='%d'," .
		 				"	description='%s'," .
						"	short_name='%s', " .
			 			"	expire_amount='%d'," .
			 			"	expire_period='%s'," .
			 			"	expires='%d' where id='{$this->id}'" .
			 			"";
		 	}
		 	
		 	$preparedSql = $wpdb->prepare($sql, $this->name, $this->status, $this->dfltMembershipId, $this->isFreeFlag, 
		 										$this->description, $this->shortName, $this->expireAmount, $this->expirePeriod, 
		 										$this->expires);
		 	
		 	$result = $wpdb->query($preparedSql);
		 	
			if($result === false)
		 	{
		 		MM_Transaction::rollback();
		 		$response->type = MM_Response::$ERROR;
		 		return new MM_Response("ERROR: unable to create bundle (".$preparedSql.")", MM_Response::$ERROR);
		 	}
		 	
		 	if(!$doUpdate) 
		 	{
		 		$this->id = $wpdb->insert_id;
		 	}
		 	
		 	if(intval($this->id) > 0)
		 	{
		 		// update categories
		 		$categories = $this->categoryIds;
		 		if(is_array($categories))
		 		{
		 			$this->removeCategories();
		 			foreach($categories as $categoryId)
		 			{
		 				$this->addCategory($categoryId);
		 			}
		 		}
		 		
			 	if($this->isFree()) 
			 	{
			 		$this->removeProducts();
			 	} 
			 	else 
			 	{
			 		// check if any products are being removed that have been purchased
			 		foreach($this->lastProductIds as $oldProductId=>$oldProductName)
			 		{
			 			if(!in_array($oldProductId, $this->productIds))
			 			{
			 				$hasBeenPurchased = MM_Product::hasBeenPurchased($oldProductId);
			 		
			 				if($hasBeenPurchased)
			 				{
			 					MM_Transaction::rollback();
			 					return new MM_Response("Product '{$oldProductName}' has been purchased at least once and cannot be removed from this bundle.", MM_Response::$ERROR);
			 				}
			 			}
			 		}
			 		
			 		$this->addProducts();
			 	}
		 	}
		}
		catch(Exception $ex)
		{
		 	MM_Transaction::rollback();
	 		return new MM_Response("ERROR: unable to create bundle", MM_Response::$ERROR);
		}
		 
		MM_Transaction::commit();
		
		return new MM_Response();
	}

	public function autogenShortName() 
	{
		global $wpdb;
		$base = preg_replace("/[^A-Z0-9]/","",strtoupper(trim($this->getName())));
		$base = substr($base,0,10);
		$candidate = $base;
		
		$sql = "select count(1) from ".MM_TABLE_BUNDLES." where short_name = '%s'";
		
		//first try the first 10 chars of the name, capitazlized and with non alpha-numeric chars removed
		$num_results = $wpdb->get_var($wpdb->prepare($sql,$candidate));
		if ($num_results == 0)
		{
			return $candidate;
		}
		
		//if here, that didnt work
		$base = substr($base,0,7);
		$candidate = $base;
		
		//try the first 7 characters with a number appended, testing 0-999 sequentially
		for ($i=0; $i<1000; $i++)
		{
			$candidate = "{$base}{$i}";
			$num_results = $wpdb->get_var($wpdb->prepare($sql,$candidate));
			if ($num_results == 0)
			{
				return $candidate;
			}
		}
			
		//if its STILL not valid, make up a completely random 10-char string, and try until we find a good one
		while (true)
		{
			$candidate = chr(rand(65,90)); //starts with a char
			for ($i=0; $i<9; $i++) 
			{ 
			    $d=rand(1,30)%2; 
			    $candidate .= ($d ? chr(rand(65,90)) : chr(rand(48,57))); 
			} 
			$num_results = $wpdb->get_var($wpdb->prepare($sql,$candidate));
			if ($num_results == 0)
			{
				return $candidate;
			}
		}	
	}
	
	public function delete()
	{	
		global $wpdb;
		
		if(!$this->hasAssociations())
		{
			$sql = "DELETE FROM ".MM_TABLE_BUNDLES." WHERE id='%d' LIMIT 1";
			$results = $wpdb->query($wpdb->prepare($sql, $this->id));
			
			// remove product relationships
			$this->removeProducts();
			
			$this->removeCategories();
			
			if($results) 
			{
				return true;
			}
		}
		
		return false;
	}
	
	public function hasAssociations()
	{
		global $wpdb;
		
		// check if bundle is associated with one or more membership levels
		$sql = "select count(*) as total from ".MM_TABLE_APPLIED_BUNDLES." where access_type='".MM_AppliedBundle::$ACCESS_TYPE_MEMBERSHIP."' and bundle_id='{$this->id}'";
		$row = $wpdb->get_row($sql);
		
		if($row->total > 0) 
		{
			return true;
		}
		
		if($this->hasSubscribers()) 
		{
			return true;
		}
		
		// check if bundle is associated with one or more posts
		$sql = "select count(*) as total from ".MM_TABLE_POSTS_ACCESS." where access_type='access_tag' and access_id='{$this->id}'";
		$row = $wpdb->get_row($sql);
		
		if($row->total > 0) {
			
			return true;
		}
		
		return false;
	}
	
	public function hasSubscribers()
	{
		global $wpdb;
		
		// check if bundle is associated with one or more users
		if($this->isValid())
		{
			$sql = "select count(*) as total from ".MM_TABLE_APPLIED_BUNDLES." where access_type='".MM_AppliedBundle::$ACCESS_TYPE_USER."' AND bundle_id='{$this->id}' AND (status='".MM_Status::$ACTIVE."' OR status='".MM_Status::$PENDING_CANCELLATION."')";
			$row = $wpdb->get_row($sql);
			
			if($row->total > 0) {
				return true;
			}
		}
		
		return false;
	}
	
	
	/** PRODUCT MANAGEMENT **/
	
	private function addProducts()
	{
		global $wpdb;
		
		$this->productIds = (!is_array($this->productIds)) ? array($this->productIds) : $this->productIds;
		
		$this->removeProducts();
		
		if(!empty($this->productIds) && count($this->productIds) > 0) 
		{
			foreach($this->productIds as $productId)
			{
				if($productId != "null") 
				{
					$sql = "insert into ".MM_TABLE_BUNDLE_PRODUCTS." set " .
							"	bundle_id='{$this->id}'," .
							"	product_id='{$productId}'  ";
							
					$wpdb->query($sql);
				}
			}
		}
	}
	
	private function removeProducts() 
	{
		global $wpdb;
		
		if(isset($this->id)) 
		{
			$sql = "delete from ".MM_TABLE_BUNDLE_PRODUCTS." where bundle_id='{$this->id}'";
			$wpdb->query($sql);
		}
		
		return true;
	}
	
	public function addProduct($productId)
	{
		global $wpdb;
		$this->removeProduct($productId);
		$sql = "insert into ".MM_TABLE_BUNDLE_PRODUCTS." set 
					bundle_id='{$this->id}', 
					product_id='{$productId}'
					";
		$wpdb->query($sql);
	}
	
	public function removeProduct($productId)
	{
		global $wpdb;
		$sql = "delete from ".MM_TABLE_BUNDLE_PRODUCTS." where bundle_id='{$this->id}' AND product_id='{$productId}';";
		$wpdb->query($sql);
	}
	
	public function getAssociatedProducts()
	{	
		if(empty($this->productIds) || count($this->productIds) == 0)
		{
			global $wpdb;
			
			$sql = "select p.* from ".MM_TABLE_BUNDLE_PRODUCTS." aat, ".MM_TABLE_PRODUCTS." p where aat.bundle_id='{$this->id}' and aat.product_id=p.id";
			$rows = $wpdb->get_results($sql);
			
			$products = array();
			
			if($rows)
			{
				foreach($rows as $row) 
				{
					$products[$row->id] = $row->name;
				}
			}
			
			$this->productIds = $products;
		}
		
		return $this->productIds;
	}
	
	
	/** CATEGORY MANAGEMENT **/
	
	public function addCategory($categoryId)
	{
		global $wpdb;
		$this->removeCategory($categoryId);
		$sql = "insert into ".MM_TABLE_BUNDLE_CATEGORIES." set
		bundle_id='{$this->id}',
		category_id='{$categoryId}'
		";
		$wpdb->query($sql);
	}
	
	private function removeCategories()
	{
		global $wpdb;
	
		if(isset($this->id))
		{
			$sql = "delete from ".MM_TABLE_BUNDLE_CATEGORIES." where bundle_id='{$this->id}'";
			$wpdb->query($sql);
		}
	
		return true;
	}
	
	public function removeCategory($categoryId)
	{
		global $wpdb;
		$sql = "delete from ".MM_TABLE_BUNDLE_CATEGORIES." where bundle_id='{$this->id}' AND category_id='{$categoryId}';";
		$wpdb->query($sql);
	}
	
	public function getAssociatedCategories()
	{
		global $wpdb;
		$sql = "select category_id as id from ".MM_TABLE_BUNDLE_CATEGORIES." mtp where bundle_id='{$this->id}' ";
		
		$rows = $wpdb->get_results($sql);
	
		$categories = array();
		if(is_array($rows)){
			foreach($rows as $category)
			{
				$categories[$category->id] = $category->id;
			}
		}
		$this->setCategories($categories);
	}
	
	
	/** GETTERS/SETTERS **/
	
	public function setName($str) 
	{
		$this->name = $str;
	}
	
	public function getName()
	{
		return $this->name;
	}
	
	public function setShortName($str)
	{
		$this->shortName = $str;
	}
	
	public function getShortName()
	{
		return $this->shortName;
	}
	
	public function setIsFree($str) 
	{
		$this->isFreeFlag = $str;
	}
	
	public function isFree()
	{
		return ($this->isFreeFlag == "1") ? true : false;
	}
	
	public function setDfltMembershipId($id) 
	{
		$this->dfltMembershipId = $id;
	}
	
	public function getDfltMembershipId()
	{
		return $this->dfltMembershipId;
	}
	
	public function getDfltMembership()
	{
		if(intval($this->dfltMembershipId) > 0)
		{
			$dfltMembership = new MM_MembershipLevel($this->dfltMembershipId);
			
			if($dfltMembership->isValid() && $dfltMembership->isActive())
			{
				return $dfltMembership;
			}
		}
		
		return MM_MembershipLevel::getDefaultMembership();
	}
	
	public function setDescription($str) 
	{
		$this->description = $str;
	}
	
	public function getDescription()
	{
		return $this->description;
	}
	
	public function doesExpire()
	{
		return ($this->expires == "1") ? true : false;
	}
	
	public function setExpires($str)
	{
		$this->expires = $str;
	}
	
	public function getExpires()
	{
		return $this->expires;
	}
	
	public function setExpirePeriod($str) 
	{
		$this->expirePeriod = $str;
	}
	
	public function getExpirePeriod()
	{
		return $this->expirePeriod;
	}
	
	public function setExpireAmount($str) 
	{
		$this->expireAmount = $str;
	}
	
	public function getExpireAmount()
	{
		return $this->expireAmount;
	}
	
	public function getExpirationDate($startDate)
	{
		$expirationDate = MM_Utils::getCurrentTime();
		
		if($this->doesExpire())
		{
			$amount = $this->getExpireAmount();
			$period = $this->getExpirePeriod();
			
			switch($period)
			{
				case "days":
					$expirationDate = Date("Y-m-d H:i:s", strtotime($startDate." + ".$amount." day"));
					break;
						
				case "weeks":
					$expirationDate = Date("Y-m-d H:i:s", strtotime($startDate." + ".$amount." week"));
					break;
						
				case "months":
					$expirationDate = Date("Y-m-d H:i:s", strtotime($startDate." + ".$amount." month"));
					break;
			}
		}
		
		return $expirationDate;
	}
	
	public function setStatus($str) 
	{
		$this->status = $str;
	}
	
	public function getStatus()
	{
		return $this->status;
	}
	
	public function isActive()
	{
		return ($this->status == "1") ? true : false;
	}
	
	public function setProducts($productIds) 
	{
		if(is_array($productIds))
		{	
			$this->lastProductIds = $this->productIds;
			$this->productIds = $productIds;
		}
	}
	
	public function setCategories($categoryIds) 
	{
		if(is_array($categoryIds))
		{	
			$this->categoryIds = $categoryIds;
		}
	}
	
	public function getCategories() 
	{
		return $this->categoryIds;
	}
	
	
	
	/** UTILITIES **/
	
	public static function getBundlesList($activeStatusOnly=false, $filterBySubType="")
	{
		global $wpdb;
			
		$bundles = array();
		$whereSql = array();
			
		$sql = "SELECT * FROM ".MM_TABLE_BUNDLES;
			
		if($activeStatusOnly)
		{
			array_push($whereSql, "status = '1'");
		}
			
		if($filterBySubType == self::$SUB_TYPE_FREE)
		{
			array_push($whereSql, "is_free = '1'");
		}
		else if($filterBySubType == self::$SUB_TYPE_PAID)
		{
			array_push($whereSql, "is_free != '1'");
		}
			
		if(count($whereSql) > 0)
		{
			$sql .= " WHERE ".join(" AND ", $whereSql);
		}
			
		$sql .= " order by name asc ";
		
		$rows = $wpdb->get_results($sql);
			
		if($rows)
		{
			foreach($rows as $row)
			{
				$bundles[$row->id] = $row->name;
			}
		}
	
		return $bundles;
	}
	
	public static function getBundleShortNames()
	{
		global $wpdb;
			
		$bundles = array();
			
		$sql = "select * from ".MM_TABLE_BUNDLES;
			
		$rows = $wpdb->get_results($sql);
			
		if($rows)
		{
			foreach($rows as $row)
			{
				$bundles[$row->short_name] = $row->name;
			}
		}
	
		return $bundles;
	}

	public static function getBundlePostAccess()
	{
		global $wpdb;
 		$sql = "SELECT at.id, at.name FROM ".MM_TABLE_BUNDLES." at, ".MM_TABLE_POSTS_ACCESS." pa 
 					WHERE 
 						at.status ='1' and 
 						at.id = pa.access_id and 
 						pa.access_type='access_tag'
 						";
 		$rows = $wpdb->get_results($sql);
 		
 		$bundles = array();
 		if($rows===false)
 		{
 			return $bundles;
 		}
 		if($rows) 
 		{
	 		foreach($rows as $row)
			{
				$bundles[$row->id] = $row->name;
			}
 		}
 		
 		return $bundles;
	}

	public static function checkShortNameIsUnique($shortName, $accessTagId=0)
	{
		global $wpdb;
		
		$sql = "select count(1) from ".MM_TABLE_BUNDLES." where short_name = '%s' and id != '%d' ";
	
		$preSql = $wpdb->prepare($sql,$shortName, $accessTagId);

		$num_results = $wpdb->get_var($preSql);
		if ($num_results == 0)
		{
			return true;
		}
		else 
		{
			return false;	
		}
	}
}
