/**
 *
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_Action extends MM_Entity
{
	public static $MM_ACTION_CALL_SCRIPT = "action_call_script";
	public static $MM_ACTION_SEND_EMAIL = "action_send_email";
	
	public static $CURRENT_MEMBER_PLACEHOLDER = "-1";
	
	private $eventType = "";
	private $actionType = "";
	private $actionValue = array();
	private $eventAttributes = array();
	private $status = "1";
	
	public function getData() 
	{
		global $wpdb;
		
		$sql = "SELECT * FROM ".MM_TABLE_ACTIONS." WHERE id='".$this->id."';";
		$result = $wpdb->get_row($sql);
		
		if($result) {
			$this->setData($result);
		}
		else {
			parent::invalidate();
		}
	}

	public function setData($data)
	{
		try 
		{
			$this->eventType = $data->event_type;
			$this->actionType = $data->action_type;
			$this->actionValue = unserialize($data->action_value);
			$this->eventAttributes = unserialize($data->event_attributes);
			$this->status = $data->status;
			parent::validate();
		}
		catch (Exception $ex) 
		{
			parent::invalidate();
		}
	}
	
	public function commitData()
	{	
		global $wpdb;
		if(intval($this->id) > 0)
		{
			$sql = "UPDATE ".MM_TABLE_ACTIONS." SET event_type='%s', action_type='%s', action_value='%s', event_attributes='%s', status='%s' WHERE id='{$this->id}';";
			$preparedSql = $wpdb->prepare($sql, $this->eventType, $this->actionType, serialize($this->actionValue), serialize($this->eventAttributes), $this->status);
			$result = $wpdb->query($preparedSql);
			
			if($result === false)
			{
				return new MM_Response("Unable to save push notification", MM_Response::$ERROR);
			}
		}
		else 
		{	
			$sql = "INSERT INTO ".MM_TABLE_ACTIONS." SET event_type='%s', action_type='%s', action_value='%s', event_attributes='%s', status='%s';";
			$preparedSql = $wpdb->prepare($sql, $this->eventType, $this->actionType, serialize($this->actionValue), serialize($this->eventAttributes), $this->status);
			$result = $wpdb->query($preparedSql);
			
			if($result === false)
			{
				return new MM_Response("Unable to create push notification", MM_Response::$ERROR);
			}
		}
		return new MM_Response();
	}
	
	public function delete()
	{	
		global $wpdb;
		
		$sql = "DELETE FROM ".MM_TABLE_ACTIONS." WHERE id='%d' LIMIT 1";
		$results = $wpdb->query($wpdb->prepare($sql, $this->id));
		
		if($results) 
		{
			return new MM_Response();
		}
		
		return new MM_Response("Unable to delete action", MM_Response::$ERROR);
	}
	
	public function setEventType($type)
	{
		$this->eventType = $type;
	}
	
	public function getEventType()
	{
		return $this->eventType;
	}
	
	public function setActionType($type)
	{
		$this->actionType = $type;
	}
	
	public function getActionType()
	{
		return $this->actionType;
	}
	
	public function setActionValue($value)
	{
		$this->actionValue = $value;
	}
	
	public function getActionValue()
	{
		return $this->actionValue;
	}
	
	public function setEventAttributes($value)
	{
		$this->eventAttributes = $value;
	}
	
	public function getEventAttributes()
	{
		return $this->eventAttributes;
	}
	
	public function setStatus($value)
	{
		$this->status = $value;
	}
	
	public function getStatus()
	{
		return $this->status;
	}
	
	public function isActive()
	{
		return (intval($this->status) == 1) ? true : false;
	}
	
	
	/** UTILITIES **/
	
	public static function findActionsByEventType($eventType)
	{
		$actions = array();
		
		global $wpdb;
		$sql = "SELECT * FROM ".MM_TABLE_ACTIONS." WHERE event_type='{$eventType}';";
		$results = $wpdb->get_results($sql);
		
		if($results) 
		{
			foreach($results as $result)
			{
				$action = new MM_Action();
				$action->setData($result);
				array_push($actions, $action);
			}
		}
		
		return $actions;
	}
	
	public static function eventAssigned($eventType, $actionType)
	{
		global $wpdb;
		$sql = "SELECT count(*) as total FROM ".MM_TABLE_ACTIONS." WHERE event_type = '{$eventType}' AND action_type = '{$actionType}';";
		$result = $wpdb->get_row($sql);
	
		if(is_object($result))
		{
			return ($result->total > 0);
		}
		return false;
	}
	
	public static function prepareSendEmailValue($emailToId, $emailFromId, $emailCC, $emailSubject, $emailBody)
	{
		$value = array();
		$value["emailToId"] = $emailToId;
		$value["emailFromId"] = $emailFromId;
		$value["emailCC"] = $emailCC;
		$value["emailSubject"] = $emailSubject;
		$value["emailBody"] = $emailBody;
		return $value;
	}
	
	public static function prepareCallScriptValue($scriptUrl)
	{
		$value = array();
		$value["scriptUrl"] = $scriptUrl;
		return $value;
	}
	
	public static function getActionName($type)
	{
		switch($type)
		{
			case MM_Action::$MM_ACTION_SEND_EMAIL:
				return "Send an Email";
				
			case MM_Action::$MM_ACTION_CALL_SCRIPT:
				return "Call a Custom Script";
		}
	}
	
	public static function getActionsList()
	{
		$list = array();
		$list[MM_Action::$MM_ACTION_SEND_EMAIL] = self::getActionName(MM_Action::$MM_ACTION_SEND_EMAIL);
		$list[MM_Action::$MM_ACTION_CALL_SCRIPT] = self::getActionName(MM_Action::$MM_ACTION_CALL_SCRIPT);
		return $list;
	}
}